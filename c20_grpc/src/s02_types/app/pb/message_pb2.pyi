"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import google.protobuf.descriptor
import google.protobuf.message
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class Address(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CITY_FIELD_NUMBER: builtins.int
    STREET_FIELD_NUMBER: builtins.int
    city: builtins.str
    street: builtins.str
    def __init__(
        self,
        *,
        city: builtins.str = ...,
        street: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["city", b"city", "street", b"street"]) -> None: ...

global___Address = Address

@typing.final
class User(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    AGE_FIELD_NUMBER: builtins.int
    ADDRESS_FIELD_NUMBER: builtins.int
    name: builtins.str
    age: builtins.int
    @property
    def address(self) -> global___Address: ...
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        age: builtins.int = ...,
        address: global___Address | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["address", b"address"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["address", b"address", "age", b"age", "name", b"name"]) -> None: ...

global___User = User

@typing.final
class Response(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class Result(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        OK_FIELD_NUMBER: builtins.int
        CODE_FIELD_NUMBER: builtins.int
        ok: builtins.bool
        code: builtins.int
        def __init__(
            self,
            *,
            ok: builtins.bool = ...,
            code: builtins.int = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["code", b"code", "ok", b"ok"]) -> None: ...

    STATUS_FIELD_NUMBER: builtins.int
    TEXT_FIELD_NUMBER: builtins.int
    text: builtins.str
    @property
    def status(self) -> global___Response.Result: ...
    def __init__(
        self,
        *,
        status: global___Response.Result | None = ...,
        text: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["status", b"status", "text", b"text"]) -> None: ...

global___Response = Response
