[project]
name = "python2025"
version = "0.1.0"
description = ""
authors = [{ name = "Your Name", email = "you@example.com" }]
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "pyyaml (>=6.0.2,<7.0.0)",
    "pydantic (>=2.11.4,<3.0.0)",
    "scrapli (>=2025.1.30,<2026.0.0)",
    "scrapli-community (>=2025.1.30,<2026.0.0)",
    "requests (>=2.32.3,<3.0.0)",
    "uvloop (>=0.21.0,<0.22.0)",
    "confluent-kafka (>=2.10.0,<3.0.0)",
    "aiokafka (>=0.12.0,<0.13.0)",
]


[tool.poetry]
package-mode = false


[tool.poetry.group.dev.dependencies]
ipython = "^9.2.0"
mypy = "^1.15.0"
ruff = "^0.11.9"
types-netaddr = "^1.3.0.20240530"
types-pyyaml = "^6.0.12.20250516"


[tool.black]
line-length = 120


[tool.ruff]
line-length = 120


[tool.ruff.lint]
select = ["N", "B", "A", "E", "W", "F", "ASYNC", "S", "D", "I"]
ignore = [
    "D100", # Missing docstring in public module
    "D101", # Missing docstring in public class
    "D102", # Missing docstring in public method
    "D103", # Missing docstring in public function
    "D105", # Missing docstring in magic method
    "D106", # Missing docstring in public nested class
    "D107", # Missing docstring in `__init__`
    "S101", # Use of `assert` detected
    "S311", # Standard pseudo-random generators are not suitable for cryptographic purposes
    "D203", # incorrect-blank-line-before-class, incompatible with D211
    "D212", # multi-line-summary-first-line, incompatible with D213
]

[tool.ruff.lint.pydocstyle]
convention = "google"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
strict = false
